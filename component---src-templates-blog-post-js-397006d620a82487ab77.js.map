{"version":3,"sources":["webpack:///./src/components/avatar.jpg","webpack:///./src/utils/helpers.js","webpack:///./src/components/Bio.js","webpack:///./src/templates/blog-post.js"],"names":["module","exports","formatReadingTime","minutes","cups","Math","round","Array","fill","join","ceil","bioQuery","Bio","query","render","data","site","siteMetadata","author","social","style","display","marginBottom","rhythm","color","src","avatar","alt","marginRight","borderRadius","width","height","href","github","BlogPostTemplate","post","this","props","markdownRemark","siteTitle","title","pageContext","previous","next","location","frontmatter","description","excerpt","fontWeight","scale","marginTop","date","fields","readingTime","dangerouslySetInnerHTML","__html","html","id","flexWrap","justifyContent","listStyle","padding","to","slug","rel","className","React","Component"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,sD,kCCApC,SAASC,EAAkBC,GAChC,IAAIC,EAAOC,KAAKC,MAAMH,EAAU,GAChC,OAAU,IAAII,MAAMH,GAAQ,GAAGI,KAAK,MAAMC,KAAK,IAA/C,IAAsDJ,KAAKK,KAAKP,GAAhE,YAFF,mC,kCCAA,sEA0CA,IAAMQ,EAAQ,aAoBCC,IAxDf,WACE,OACE,kBAAC,cAAD,CACEC,MAAOF,EACPG,OAAQ,SAAAC,GAAS,IAAD,EACaA,EAAKC,KAAKC,aAA7BC,EADM,EACNA,OAAQC,EADF,EACEA,OAChB,OACE,yBACEC,MAAO,CACLC,QAAQ,OACRC,aAAcC,YAAO,IACrBC,MAAO,sBAEV,yBACGC,IAAKC,IACLC,IAAKT,EACLE,MAAO,CACLQ,YAAaL,YAAO,IACpBD,aAAc,EACdO,aAAc,MACdC,MAAOP,YAAO,GACdQ,OAAQR,YAAO,MAGnB,+CACmB,uBAAGS,KAAI,sBAAwBb,EAAOc,QAAWf,GADpE,IAEE,6BAFF,uC,sJCrBNgB,E,kGACJpB,OAAA,WACE,IAAMqB,EAAOC,KAAKC,MAAMtB,KAAKuB,eACvBC,EAAYH,KAAKC,MAAMtB,KAAKC,KAAKC,aAAauB,MAF7C,EAGoBJ,KAAKC,MAAMI,YAA9BC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KAClB,OACE,kBAAC,IAAD,CAAQC,SAAUR,KAAKC,MAAMO,SAAUJ,MAAOD,GAC5C,kBAAC,IAAD,CAAKC,MAAOL,EAAKU,YAAYL,MAAOM,YAAaX,EAAKY,UACtD,wBAAI3B,MAAO,CAAE4B,WAAY,OAAQxB,MAAO,sBAAwBW,EAAKU,YAAYL,OACjF,uBACEpB,MAAK,iBACA6B,aAAM,IADN,CAEH5B,QAAQ,QACRC,aAAcC,YAAO,GACrB2B,UAAW3B,aAAQ,IACnBC,MAAO,uBAGRW,EAAKU,YAAYM,KATpB,MAUSjD,YAAkBiC,EAAKiB,OAAOC,YAAYlD,UAEnD,yBAAKiB,MAAO,CAAEI,MAAO,qBAAuB8B,wBAAyB,CAAEC,OAAQpB,EAAKqB,QAEpF,yBAAKC,GAAG,YACR,wBACErC,MAAO,CACLE,aAAcC,YAAO,MAGzB,kBAAC,IAAD,MAEA,wBACEH,MAAO,CACLC,QAAQ,OACRqC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGlB,GACC,kBAAC,OAAD,CAAMmB,GAAInB,EAAKS,OAAOW,KAAMvB,MAAOG,EAAKE,YAAYL,MAAOwB,IAAI,OAAOC,UAAU,YAAhF,KACKtB,EAAKE,YAAYL,QAI1B,4BACGE,GACC,kBAAC,OAAD,CAAMoB,GAAIpB,EAASU,OAAOW,KAAMvB,MAAOE,EAASG,YAAYL,MAAOwB,IAAI,OAAOC,UAAU,YACrFvB,EAASG,YAAYL,MADxB,U,GAjDiB0B,IAAMC,WA4DtBjC","file":"component---src-templates-blog-post-js-397006d620a82487ab77.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/avatar-ea4a257d64e050ea1025297f93e08209.jpg\";","export function formatReadingTime(minutes) {\n  let cups = Math.round(minutes / 5);\n  return `${new Array(cups || 1).fill('☕️').join('')} ${Math.ceil(minutes)} min read`;\n}","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport { rhythm } from '../utils/typography';\nimport avatar from './avatar.jpg';\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata;\n        return (\n          <div\n            style={{\n              display: `flex`,\n              marginBottom: rhythm(0.5),\n              color: 'var(--textNormal)'\n            }}\n          ><img\n              src={avatar}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                borderRadius: '50%',\n                width: rhythm(2),\n                height: rhythm(2),\n              }}\n            />\n            <p>\n              Personal blog by <a href={`https://github.com/${social.github}`}>{author}</a>.\n              <br />\n              Note thoughts and experience.\n            </p>\n          </div>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          github\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/seo';\nimport { formatReadingTime } from '../utils/helpers';\nimport { rhythm, scale } from '../utils/typography';\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const { previous, next } = this.props.pageContext;\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        <h1 style={{ fontWeight: 'bold', color: 'var(--textNormal)' }}>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-0.8),\n            color: 'var(--textNormal)'\n          }}\n        >\n          {post.frontmatter.date}\n          {` • ${formatReadingTime(post.fields.readingTime.minutes)}`}\n        </p>\n        <div style={{ color: 'var(--textNormal)' }} dangerouslySetInnerHTML={{ __html: post.html }} />\n\n        <div id=\"comment\"></div>\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {next && (\n              <Link to={next.fields.slug} title={next.frontmatter.title} rel=\"next\" className=\"nav-link\">\n                ← {next.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} title={previous.frontmatter.title} rel=\"prev\" className=\"nav-link\">\n                {previous.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id,\n      excerpt(pruneLength: 160)\n      html,\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n      },\n      fields {\n        readingTime {\n          minutes\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}