{"componentChunkName":"component---src-templates-blog-post-js","path":"/git-rename/","result":{"data":{"site":{"siteMetadata":{"title":"Notes.","author":"Natumsol"}},"markdownRemark":{"id":"7872bfc7-34f7-5059-bfa5-52da54df67f0","excerpt":"背景 Macos（Windows）默认文件系统是大小写不敏感的（case-insensitive）的，即：目录和在 Macos 看来是同一个。 Linux 系统采用的是大小写敏感（case-sensitive）的文件，即：目录和在 Linux…","html":"<h2>背景</h2>\n<ol>\n<li>Macos（Windows）默认文件系统是大小写不敏感的（case-insensitive）的，即：目录<code class=\"language-text\">App</code>和<code class=\"language-text\">app</code>在 Macos 看来是同一个。</li>\n<li>Linux 系统采用的是大小写敏感（case-sensitive）的文件，即：目录<code class=\"language-text\">App</code>和<code class=\"language-text\">app</code>在 Linux 看来是不同的文件系统，可以共存。</li>\n</ol>\n<h2>问题复现</h2>\n<ol>\n<li>创建一个新仓库，配置远程仓库 (gitlab or github)</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token builtin class-name\">cd</span> <span class=\"token variable\"><span class=\"token variable\">`</span> mktemp -d<span class=\"token variable\">`</span></span>\n<span class=\"token function\">git</span> init\n<span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin git@xxxx.com</code></pre></div>\n<ol start=\"2\">\n<li>创建任意小写字母命名的目录并提交</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">mkdir</span> app\n<span class=\"token builtin class-name\">cd</span> app <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">touch</span> index.js <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">git</span> push</code></pre></div>\n<ol start=\"3\">\n<li>配置 git 大小写敏感并将目录名改为大写</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 配置git大小写敏感</span>\n<span class=\"token function\">git</span> config core.ignorecase <span class=\"token boolean\">false</span>\n\n<span class=\"token function\">mv</span> app App <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">git</span> push</code></pre></div>\n<p>此时，gitlab 上就会出现 <code class=\"language-text\">App</code> 和 <code class=\"language-text\">app</code> 两个同名的目录。</p>\n<p><img src=\"https://i.loli.net/2021/01/04/pvLMhuOtCEr4Abw.png\" alt=\"image.png\"></p>\n<h2>原因分析</h2>\n<p>将 git 的大小写敏感开启后，如果用文件系统工具 mv 将 <code class=\"language-text\">a</code> 重命名为<code class=\"language-text\">A</code>后，文件系统并不会认为文件发生了变化，git 也不会认为是进行了文件重命名，而是认为新增了文件。</p>\n<p>这样提交后，就会导致远程仓库有两份文件<code class=\"language-text\">a</code>和<code class=\"language-text\">A</code>。</p>\n<h2>如何解决</h2>\n<p>此种问题最简单的处理办法是在 Linux 下进行文件名的重新校正。</p>\n<p>如果没有 Linux 环境，在 Macos 下也是可以的，就是比较麻烦，需要用磁盘工具创建一个对大小写敏感的磁盘镜像并挂载，然后将仓库重新 clone 到此磁盘镜像中并进行文件名的校准。</p>\n<ol>\n<li>创建磁盘镜像</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 创建一个文件系统为敏感的HSF+，容量1G的大小稀疏磁盘镜像</span>\nhdiutil create -size 1g -fs <span class=\"token string\">\"Case-sensitive Journaled HFS+\"</span> -type SPARSE -volname Projects ~/Projects.dmg</code></pre></div>\n<ol start=\"2\">\n<li>挂载磁盘镜像</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token comment\"># 挂载</span>\nhdiutil attach ~/Projects.dmg.sparseimage\n<span class=\"token comment\"># 设置 /Volumes/Projects/ 下文件可见</span>\n<span class=\"token function\">sudo</span> setfile -a V /Volumes/Projects/\n<span class=\"token comment\"># 重启 finder</span>\n<span class=\"token function\">killall</span> Finder\n<span class=\"token comment\"># 创建目录</span>\n<span class=\"token function\">mkdir</span> /Volumes/Projects/projects/</code></pre></div>\n<ol start=\"3\">\n<li>克隆仓库 &#x26; 文件名校准</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> clone git@xxx.com\n<span class=\"token comment\"># 文件名校准</span>\n<span class=\"token function\">rm</span> -rf <span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span></code></pre></div>\n<ol start=\"4\">\n<li>提交</li>\n</ol>\n<h2>复盘：如何规避此类问题？</h2>\n<p>利用 git 自带的文件夹命名工具<code class=\"language-text\">git mv</code>进行操作（可不用配置 git 大小写敏感），但是要注意：在对大小写不敏感的文件系统上，需要设置缓存文件，like this：</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> <span class=\"token function\">mv</span> <span class=\"token builtin class-name\">test</span> temp <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">git</span> <span class=\"token function\">mv</span> temp Test</code></pre></div>\n<h2>参考资料</h2>\n<ul>\n<li><a href=\"https://blog.balazspocze.me/2019/11/27/i-forgot-to-format-my-mac-to-case-sensitive-this-way-i-solved-it/\">I forgot to format my Mac to case-sensitive – this way I solved it </a></li>\n<li><a href=\"https://www.khow.me/blog/cloning-a-git-repo-and-it-already-has-a-dirty-working.html\">新克隆的仓库，什么都没做，却存在修改，为什么？</a></li>\n<li><a href=\"https://stackoverflow.com/questions/17683458/how-do-i-commit-case-sensitive-only-filename-changes-in-git\">How do I commit case-sensitive only filename changes in Git?</a>]</li>\n<li><a href=\"https://ss64.com/osx/setfile.html\">setfile</a></li>\n<li><a href=\"https://ss64.com/osx/hdiutil.html\">hdiutil</a></li>\n</ul>","frontmatter":{"title":"解决 git 仓库文件在 Macos 文件系统的重命名冲突的问题。","date":"2021-01-04"},"fields":{"readingTime":{"minutes":1.05}}}},"pageContext":{"slug":"/git-rename/","previous":{"fields":{"slug":"/razors/","readingTime":{"minutes":0.155}},"frontmatter":{"title":"各种「剃刀」原理","prologue":"如无必要勿增实体。","date":"2020-09-21"},"excerpt":"奥卡姆剃刀 如无必要勿增实体。 奥卡姆剃刀（英语：Occam’s Razor, Ockham’s Razor），又称“奥坎的剃刀”，拉丁文为 lex parsimoniae，意思是简约之法则，是由 14 世纪逻辑学家、圣方济各会修士奥卡姆的威廉（William of Occam，约 1287 年至 134…"},"next":{"fields":{"slug":"/summary_of_2020/","readingTime":{"minutes":1.72}},"frontmatter":{"title":"2020 年度总结","prologue":"是的，这是一篇 迟到 的 年更 年度总结。","date":"2021-01-17"},"excerpt":"引子 是的，这是一篇 迟到 的 年更 年度总结。 作为一名拖延症晚期患者，除非受到外界环境干扰，我每次都会无一例外地将拖延进行到底，直到 Deadline…"}}},"staticQueryHashes":["1006016363","3128451518"]}