{"version":3,"sources":["Components/HeaderComponents.js","Components/Header.js","Components/GameDesk.js","App.js","Reducers/index.js","index.js"],"names":["Title","className","Score","this","props","score","Component","defaultProps","BestScore","bestScore","Tips","mode","tip","ButtonGroup","action","restart","undo","onClick","Menu","Header","connect","state","bricks","main","dispatch","type","GameDesk","width","deskWidth","brickNumberPerRow","height","margin","style","lineHeight","fontSizeTable","map","row","brick","index","key","Object","assign","fontSize","fontWeight","value","Array","fill","v","Math","pow","floor","random","Brick","cssName","App","self","document","addEventListener","event","keycode","keyCode","move","gameOver","window","confirm","pos","genBrick","col","rand","doMove","isMoveable","i","j","k","obj","brickTemp","initBrick","brick_2","JSON","parse","stringify","needNewBrick","canMove","flag","check","some","item","array","combineReducers","current","undoBricks","max","push","pop","slice","reduce","a","b","concat","store","createStore","reducers","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.585c87c0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n/** 标题组件 */\nconst Title = () => (<div className='title pull-left '>2048-Lite</div>);\n\n/** 计分组件 */\nclass Score extends Component {\n    render() {\n        return (<div className='score pull-left'>\n            <span className='score-title'>SCORE</span>\n            <span className='detail'>{this.props.score}</span>\n        </div>)\n    }\n}\n\nScore.defaultProps = {\n    score: 0\n};\n\nScore.propTypes = {\n    score: PropTypes.number.isRequired\n};\n\n/** 最高得分组件 */\n\nclass BestScore extends Component {\n    render() {\n        return (<div className='score pull-left '>\n            <span className='score-title'>BEST</span>\n            <span className='detail'>{this.props.bestScore}</span>\n        </div>)\n    }\n}\n\nBestScore.defaultProps = {\n    bestScore: 0\n};\n\nBestScore.propTypes = {\n    bestScore: PropTypes.number.isRequired\n};\n\n\n/** 提示组件 */\n\nclass Tips extends Component {\n    render() {\n        return (\n            <div className='tips'>\n                <strong>{this.props.mode}</strong>\n                <span>{this.props.tip}</span>\n            </div>\n        )\n    }\n}\n\nTips.defaultProps = {\n    mode: 'Practice mode',\n    tip: ':you have option to undo your last move.'\n};\n\nTips.propTypes = {\n    mode: PropTypes.string.isRequired,\n    tip: PropTypes.string.isRequired\n};\n\n/** 按钮组件 */\n\n\nclass ButtonGroup extends Component {\n    render() {\n        let {restart, undo} = this.props.action;\n        return (\n            <div className='button-group'>\n                <div className='btn' onClick={ restart}> RESTART </div>\n                <div className='btn pull-right' onClick={ undo}> UNDO </div>\n            </div>\n        )\n    }\n}\n\nButtonGroup.propTypes = {\n    action: PropTypes.object,\n};\n\n\n\nconst Menu = () => (<div></div>);\n\nexport { Title, Score, BestScore, Tips, ButtonGroup, Menu };","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Title, Score, BestScore, Tips, ButtonGroup, Menu } from './HeaderComponents';\n\nconst mapStateToProps = (state) => {\n    return {\n        score: state.bricks.score,\n        bestScore: state.bricks.bestScore,\n        mode: state.main.mode,\n        tip: state.main.tip,\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        restart: () => {\n            dispatch({\n                type: 'RESTART_GAME'\n            })\n        },\n        undo: () => {\n            dispatch({\n                type: 'UNDO'\n            })\n        }\n    }\n}\nclass Header extends Component {\n    render() {\n        return (\n            <div className='header'>\n                <Title />\n                <Score score={this.props.score} />\n                <BestScore bestScore={this.props.bestScore} />\n                <Tips mode={this.props.mode} tip={this.props.tip} />\n                <ButtonGroup action={{ restart: this.props.restart, undo: this.props.undo }} />\n                <Menu />\n            </div>\n        )\n    }\n}\n\n\nHeader.propTypes = {\n    score: PropTypes.number.isRequired,\n    bestScore: PropTypes.number.isRequired,\n    mode: PropTypes.string,\n    tip:PropTypes.string,\n    action: PropTypes.shape({\n        restart: PropTypes.func.isRequired,\n        undo: PropTypes.func.isRequired\n    })\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n    return {\n        bricks: state.bricks.bricks,\n        deskWidth: state.main.deskWidth,\n        brickNumberPerRow: state.bricks.brickNumberPerRow\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        restart: () => {\n            dispatch({\n                type: 'RESTART_GAME'\n            })\n        }\n    }\n}\nclass GameDesk extends Component {\n    constructor(props) {\n        super(props);\n        let width = this.props.deskWidth / this.props.brickNumberPerRow * .85,\n            height = this.props.deskWidth / this.props.brickNumberPerRow * .85,\n            margin = this.props.deskWidth / this.props.brickNumberPerRow * .075;\n        this.state = {\n            style: {\n                width: width,\n                height: height,\n                margin: margin,\n                lineHeight: height + \"px\"\n            }\n        }\n    }\n\n    render() {\n        const fontSizeTable = { // 字体大小表\n            '2': '4.25em',\n            '4': '4.25em',\n            '8': '4.25em',\n            '16': '3em',\n            '32': '3em',\n            '64': '3em',\n            '128': '2.75em',\n            '256': '2.75em',\n            '512': '2.75em',\n            '1024': '1.81em',\n            '2048': '1.81em'\n        };\n        return (\n            <div className='game-desk clearfix'>\n                {this.props.bricks.map(row => row.map((brick, index) => {\n                    return <Brick key={index} style={Object.assign({}, this.state.style, {\n                        fontSize: fontSizeTable[brick],\n                        fontWeight: 700\n                    })} value={brick} />\n                }))}\n            </div>\n        )\n    }\n}\n\nGameDesk.propTypes = {\n    bricks: PropTypes.arrayOf(PropTypes.array).isRequired,\n    deskWidth: PropTypes.number.isRequired,\n    brickNumberPerRow: PropTypes.number.isRequired\n};\n\nGameDesk.defaultProps = {\n    bricks: (new Array(4)).fill([]).map(v => (new Array(4)).fill(Math.pow(2, Math.floor(1 + Math.random() * 10)))),\n    deskWidth: 480, // 默认桌面宽度\n    brickNumberPerRow: 4 // 每行方块数\n};\n\nclass Brick extends Component {\n    render() {\n        let cssName = '';\n        if (this.props.value !== 0) cssName = 'brick element-' + this.props.value;\n        else cssName = 'brick';\n        return (\n            <div className={cssName} style={this.props.style}>{this.props.value !== 0 ? this.props.value : ''}</div>\n        )\n    }\n}\n\nBrick.propTypes = {\n    value: PropTypes.number,\n    style: PropTypes.object\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameDesk);","import React, { Component } from 'react';\nimport Header from './Components/Header';\nimport { connect } from 'react-redux';\nimport GameDesk from './Components/GameDesk';\nimport './App.css';\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    move: (pos) => {\n      dispatch({\n        type: 'MOVE',\n        pos: pos\n      })\n    },\n    restart: () => {\n      dispatch({\n        type: 'RESTART_GAME'\n      })\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    gameOver: state.bricks.gameOver\n  }\n}\nclass App extends Component {\n  componentDidMount() {\n    var self = this;\n    document.addEventListener('keydown', function (event) {\n      var keycode = event.keyCode;\n      if (keycode === 87 || keycode === 38) {\n        self.props.move('up');\n      }\n      else if (keycode === 83 || keycode === 40) {\n        self.props.move('down');\n      }\n      else if (keycode === 65 || keycode === 37) {\n        self.props.move('left');\n      }\n      else if (keycode === 68 || keycode === 39) {\n        self.props.move('right');\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    if(this.props.gameOver) {\n      if(window.confirm(\"游戏似乎已结束，是否重新开始？\")) {\n        this.props.restart();\n      }\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <GameDesk />\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\n\nfunction mainReducer(state = {}, action) {\n    switch (action.type) {\n        case 'INIT_GAME':\n            return Object.assign({}, state, {\n                tip: ':you have option to undo your last move.',\n                mode: 'Practice mode',\n                deskWidth: 480,\n            });\n        default:\n            return state;\n    }\n}\n\nfunction brciksReducer(state = {\n    bricks: [],\n    brickNumberPerRow: 4,\n    undoBricks: [],\n    gameOver: false,\n    score: 0,\n    bestScore: 0,\n}, action) {\n    var bricks, current;\n    switch (action.type) {\n        case 'INIT_GAME':\n            bricks = (new Array(4).fill([])).map(v => (new Array(action.brickNumberPerRow)).fill(0));\n            bricks = genBrick(bricks, action.brickNumberPerRow);\n            bricks = genBrick(bricks, action.brickNumberPerRow);\n            return Object.assign({}, state, {\n                bricks: bricks,\n                undoBricks: [],\n                brickNumberPerRow: action.brickNumberPerRow\n            });\n        case 'RESTART_GAME':\n            bricks = (new Array(4).fill([])).map(v => (new Array(state.brickNumberPerRow)).fill(0));\n            bricks = genBrick(bricks, state.brickNumberPerRow);\n            bricks = genBrick(bricks, state.brickNumberPerRow);\n            return Object.assign({}, state, {\n                bricks: bricks,\n                score: 0,\n                bestScore: Math.max(state.score, state.bestScore)\n            });\n        case 'GENERATE_BRICK':\n            current = genBrick(JSON.parse(JSON.stringify(state.bricks)), state.brickNumberPerRow);\n            state.undoBricks.push(JSON.stringify(state.bricks));\n            return Object.assign({}, state, {\n                bricks: current\n            });\n        case 'UNDO':\n            current = JSON.parse(state.undoBricks.pop());\n            if (current) {\n                return Object.assign({}, state, {\n                    bricks: current,\n                    undoBricks: state.undoBricks.slice(0),\n                    score: current.map(v => v.reduce((a, b) => a + b)).reduce((a, b) => a + b),\n                });\n            }\n            return state;\n        case 'MOVE':\n            var isMoveable = canMove(state.bricks, state.brickNumberPerRow, action.pos);\n            current = doMove(state.bricks, state.brickNumberPerRow, action.pos, isMoveable)\n            return Object.assign({}, state, {\n                bricks: current,\n                gameOver: check(state.bricks, state.brickNumberPerRow, state.gameOver),\n                score: current.map(v => v.reduce((a, b) => a + b)).reduce((a, b) => a + b),\n                undoBricks: state.undoBricks.concat(JSON.stringify(state.bricks))\n            });\n        default:\n            return state;\n    }\n}\n\nfunction genBrick(bricks, brickNumberPerRow) {\n    do {\n        var row = Math.floor((Math.random()) * brickNumberPerRow);\n        var col = Math.floor((Math.random()) * brickNumberPerRow);\n    }\n    while (bricks[row][col] !== 0)\n\n    var rand = Math.floor(Math.random() * 10 + 1)\n    if (rand < 7) {\n        bricks[row][col] = 2;\n    } else {\n        bricks[row][col] = 4;\n    }\n\n    return bricks;\n}\n\n\nfunction doMove(bricks, brickNumberPerRow, pos, isMoveable) {\n    let brickTemp = initBrick(brickNumberPerRow),// temp for move\n        brick_2 = deepClone(bricks),\n        i, j, k,\n        needNewBrick = false;\n\n    switch (pos) {\n        case \"up\": {\n            if (isMoveable & 0x8) {\n                for (i = 0; i < brickNumberPerRow; i++) {\n\n                    for (j = 0, k = 0; j < brickNumberPerRow; j++) {\n                        brickTemp[k][i] = brick_2[j][i] ? (k++ , brick_2[j][i]) : 0;\n                    }// clear zero for each clo\n\n                    for (j = 0; j < brickNumberPerRow - 1; j++) {\n                        if (brickTemp[j][i] === brickTemp[j + 1][i] && brickTemp[j][i]) {\n                            brickTemp[j][i] *= 2;\n                            brickTemp[j + 1][i] = 0;\n                        }\n                    }// merge\n\n                    for (j = 0, k = 0; j < brickNumberPerRow; j++) {\n                        brick_2[j][i] = 0;\n                        brick_2[k][i] = brickTemp[j][i] ? (k++ , brickTemp[j][i]) : 0;\n                    }//clear zero\n                    needNewBrick = true;\n                }\n            }\n            break;\n        }\n        case \"down\": {\n            if (isMoveable & 0x4) {\n                for (i = 0; i < brickNumberPerRow; i++) {\n\n                    for (j = brickNumberPerRow - 1, k = brickNumberPerRow - 1; j >= 0; j--) {\n                        brickTemp[k][i] = brick_2[j][i] ? (k-- , brick_2[j][i]) : 0;\n                    }// clear zero for each row\n\n                    for (j = brickNumberPerRow - 1; j > 0; j--) {\n                        if (brickTemp[j][i] === brickTemp[j - 1][i] && brickTemp[j][i]) {\n                            brickTemp[j][i] *= 2;\n                            brickTemp[j - 1][i] = 0;\n                        }\n                    }// merge\n\n                    for (j = brickNumberPerRow - 1, k = brickNumberPerRow - 1; j >= 0; j--) {\n                        brick_2[j][i] = 0;\n                        brick_2[k][i] = brickTemp[j][i] ? (k-- , brickTemp[j][i]) : 0;\n                    }//clear zero\n                }\n                needNewBrick = true;\n            }\n            break;\n        }\n        case \"left\": {\n            if (isMoveable & 0x2) {\n                for (i = 0; i < brickNumberPerRow; i++) {\n\n                    for (j = 0, k = 0; j < brickNumberPerRow; j++) {\n                        brickTemp[i][k] = brick_2[i][j] ? (k++ , brick_2[i][j]) : 0;\n                    }// clear zero for each clo\n\n                    for (j = 0; j < brickNumberPerRow - 1; j++) {\n                        if (brickTemp[i][j] === brickTemp[i][j + 1] && brickTemp[i][j]) {\n                            brickTemp[i][j] *= 2;\n                            brickTemp[i][j + 1] = 0;\n                        }\n                    }// merge\n\n                    for (j = 0, k = 0; j < brickNumberPerRow; j++) {\n                        brick_2[i][j] = 0;\n                        brick_2[i][k] = brickTemp[i][j] ? (k++ , brickTemp[i][j]) : 0;\n                    }//clear zero\n\n                }\n                needNewBrick = true;\n\n            }\n            break;\n        }\n\n        case \"right\": {\n            if (isMoveable & 0x1) {\n                for (i = 0; i < brickNumberPerRow; i++) {\n\n                    for (j = brickNumberPerRow - 1, k = brickNumberPerRow - 1; j >= 0; j--) {\n                        brickTemp[i][k] = brick_2[i][j] ? (k-- , brick_2[i][j]) : 0;\n                    }// clear zero for each row\n\n                    for (j = brickNumberPerRow - 1; j > 0; j--) {\n                        if (brickTemp[i][j] === brickTemp[i][j - 1] && brickTemp[i][j]) {\n                            brickTemp[i][j] *= 2;\n                            brickTemp[i][j - 1] = 0;\n                        }\n                    }// merge\n\n                    for (j = brickNumberPerRow - 1, k = brickNumberPerRow - 1; j >= 0; j--) {\n                        brick_2[i][j] = 0;\n                        brick_2[i][k] = brickTemp[i][j] ? (k-- , brickTemp[i][j]) : 0;\n                    }//clear zero\n                }\n                needNewBrick = true;\n            }\n            break;\n        }\n        default: ;\n    }\n\n    if (needNewBrick) return genBrick(brick_2, brickNumberPerRow);\n    return brick_2\n}\n\n/*  判断是否能移动  */\nfunction canMove(bricks, brickNumberPerRow, pos) {\n    let isMoveable = 0x0000, // 初始化;\n        brickTemp = initBrick(brickNumberPerRow),\n        brick_2 = initBrick(brickNumberPerRow),\n        i, j, k,\n        flag = true;\n\n    switch (pos) {\n        case \"up\": {\n            for (i = 0; i < brickNumberPerRow; i++) {\n\n                for (j = 0, k = 0; j < brickNumberPerRow; j++) {\n                    brickTemp[k][i] = bricks[j][i] ? (k++ , bricks[j][i]) : 0;\n                }// clear zero for each clo\n\n                for (j = 0; j < brickNumberPerRow - 1; j++) {\n                    if (brickTemp[j][i] === brickTemp[j + 1][i] && brickTemp[j][i]) {\n                        brickTemp[j][i] *= 2;\n                        brickTemp[j + 1][i] = 0;\n                    }\n                }// merge\n\n                for (j = 0, k = 0; j < brickNumberPerRow; j++) {\n                    brick_2[j][i] = 0;\n                    brick_2[k][i] = brickTemp[j][i] ? (k++ , brickTemp[j][i]) : 0;\n                }//clear zero\n\n                for (j = 0; j < brickNumberPerRow; j++) {\n                    flag = flag && (brick_2[j][i] === bricks[j][i]);\n                }\n                if (!flag) {\n                    isMoveable |= 0x8;\n                    break;\n                }\n            }\n            break;\n        }\n\n        case \"down\": {\n            for (i = 0; i < brickNumberPerRow; i++) {\n\n                for (j = brickNumberPerRow - 1, k = brickNumberPerRow - 1; j >= 0; j--) {\n                    brickTemp[k][i] = bricks[j][i] ? (k-- , bricks[j][i]) : 0;\n                }// clear zero for each row\n\n                for (j = brickNumberPerRow - 1; j > 0; j--) {\n                    if (brickTemp[j][i] === brickTemp[j - 1][i] && brickTemp[j][i]) {\n                        brickTemp[j][i] *= 2;\n                        brickTemp[j - 1][i] = 0;\n\n                    }\n                }// merge\n\n                for (j = brickNumberPerRow - 1, k = brickNumberPerRow - 1; j >= 0; j--) {\n                    brick_2[j][i] = 0;\n                    brick_2[k][i] = brickTemp[j][i] ? (k-- , brickTemp[j][i]) : 0;\n                }//clear zero\n\n                for (j = 0; j < brickNumberPerRow; j++) {\n                    flag = flag && (brick_2[j][i] === bricks[j][i]);\n                }\n\n                if (!flag) {\n                    isMoveable |= 0x4;\n                    break;\n                }\n            }\n            break;\n        }\n        case \"left\": {\n            for (i = 0; i < brickNumberPerRow; i++) {\n\n                for (j = 0, k = 0; j < brickNumberPerRow; j++) {\n                    brickTemp[i][k] = bricks[i][j] ? (k++ , bricks[i][j]) : 0;\n                }// clear zero for each clo\n\n                for (j = 0; j < brickNumberPerRow - 1; j++) {\n                    if (brickTemp[i][j] === brickTemp[i][j + 1] && brickTemp[i][j]) {\n                        brickTemp[i][j] *= 2;\n                        brickTemp[i][j + 1] = 0;\n                    }\n                }// merge\n\n                for (j = 0, k = 0; j < brickNumberPerRow; j++) {\n                    brick_2[i][j] = 0;\n                    brick_2[i][k] = brickTemp[i][j] ? (k++ , brickTemp[i][j]) : 0;\n                }//clear zero\n\n                for (j = 0; j < brickNumberPerRow; j++) {\n                    flag = flag && (brick_2[i][j] === bricks[i][j]);\n                }\n\n                if (!flag) {\n                    isMoveable |= 0x2;\n                    break;\n                }\n            }\n\n            break;\n        }\n\n        case \"right\": {\n            for (i = 0; i < brickNumberPerRow; i++) {\n\n                for (j = brickNumberPerRow - 1, k = brickNumberPerRow - 1; j >= 0; j--) {\n                    brickTemp[i][k] = bricks[i][j] ? (k-- , bricks[i][j]) : 0;\n                }// clear zero for each row\n\n                for (j = brickNumberPerRow - 1; j > 0; j--) {\n                    if (brickTemp[i][j] === brickTemp[i][j - 1] && brickTemp[i][j]) {\n                        brickTemp[i][j] *= 2;\n                        brickTemp[i][j - 1] = 0;\n                    }\n                }// merge\n\n                for (j = brickNumberPerRow - 1, k = brickNumberPerRow - 1; j >= 0; j--) {\n                    brick_2[i][j] = 0;\n                    brick_2[i][j] = brickTemp[i][j] ? (k-- , brickTemp[i][j]) : 0;\n                }//clear zero\n\n                for (j = 0; j < brickNumberPerRow; j++) {\n                    flag = flag && (brick_2[i][j] === bricks[i][j]);\n                }\n                if (!flag) {\n                    isMoveable |= 0x1;\n                    break;\n                }\n            }\n            break;\n        }\n        default: ;\n    }\n\n    return isMoveable;\n}\n\n\nfunction check(bricks, brickNumberPerRow, gameOver) {\n    if (gameOver) {\n        return gameOver;\n    }// if there is brick which is equal to this.end,game over;\n    for (var i = 0; i < brickNumberPerRow; i++) {\n        if (bricks[i].some(function (item, index, array) {\n            return item === 0;\n        })) {\n            return false;\n        }//if there is still zero brick ,game continue;\n    }\n\n    for (i = 0; i < brickNumberPerRow; i++) {\n        for (var j = 0; j < brickNumberPerRow - 1; j++) {\n            if (bricks[i][j] === bricks[i][j + 1]) {\n                return false;\n            }\n        }\n        for (j = 0; j < brickNumberPerRow - 1; j++) {\n            if (bricks[j][i] === bricks[j + 1][i]) {\n                return false;\n            }\n        }\n    }// 如果有两个相邻的方块，则游戏未结束;\n\n    return true;\n}\nfunction initBrick(brickNumberPerRow) {\n    return (new Array(brickNumberPerRow)).fill([]).map(v => (new Array(brickNumberPerRow)).fill(0))\n}\n\nfunction deepClone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\nexport default combineReducers({\n    bricks: brciksReducer,\n    main: mainReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reducers from \"./Reducers\"\nimport './index.css';\n\nlet store = createStore(reducers);\n\nstore.dispatch({\n  type: 'INIT_GAME',\n  brickNumberPerRow: 4\n}); // 初始化游戏\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}